(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{407:function(a,t,e){"use strict";e.r(t);var n=e(56),s=Object(n.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"强制类型转换"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#强制类型转换"}},[a._v("#")]),a._v(" 强制类型转换")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("方式一：使用Number()函数")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("- 字符串 --\x3e 数字\n\t1.如果是纯数字的字符串，则直接将其转换为数字\n    2.如果字符串中有非数字的内容，则转换为NaN                             #！！！！！\n    3.如果字符串是一个空串或者是一个全是空格的字符串，则转换为0               #！！！！\n\n\n- 布尔 --\x3e 数字\n\ttrue 转成 1\n    false 转成 0\n\n\n- null --\x3e 数字     0\n\n\n- undefined --\x3e 数字 NaN\n")])])])]),a._v(" "),e("li",[e("p",[a._v("方式二：这种方式专门用来对付字符串")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("- parseInt() 把一个字符串转换为一个整数    #如parseInt(\"123px;\")\n\tparseInt()从左到右，遇到非整数后面的就不看了，如'123.456'和'123px456'都只能取出123\n\n\n- parseFloat() 把一个字符串转换为一个浮点数    \n\t#如parseFloat('123.456px;')     取出123.456\n\t#parseFloat('123.456.789px;')   取出123.456\n\n\n如果对非String使用parseInt()或parseFloat()，它会先将其转换为String然后在操作\n\t#如parseInt(null)    --\x3e parseInt('null')        --\x3eNaN\n\t#如parseInt(true)    --\x3e parseInt('true')        --\x3eNaN\n")])])])])]),a._v(" "),e("h2",{attrs:{id:"max-value"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#max-value"}},[a._v("#")]),a._v(" MAX_VALUE")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("Number.MAX_VALUE\t\t\t\t\t\t\t#JS数字可以表示的最大数\n\nNumber.MAX_VALUE*2\t\t\t\t\t\t\t\n\t# 用Number表示的数字超过了最大值(并不会报错)，则会返回一个Infinity 表示正无穷\n\t# -Infinity 表示负无穷\n\t# 使用typeof检查Infinity也会返回number, 可以直接定义a=Infinity,typeof a是数字！！！\n")])])]),e("h2",{attrs:{id:"min-value"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#min-value"}},[a._v("#")]),a._v(" MIN_VALUE")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("Number.MIN_VALUE\t\t\t\t\t\t\t#JS数字可以表示的最小正数（同样最大的负数-Number.MIN_VALUE）\n\n# Number.Min_VALUE返回的并不是一个负数，而是一个能表示的最小的大于0的浮点数\n")])])]),e("h2",{attrs:{id:"nan"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nan"}},[a._v("#")]),a._v(" NaN")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('# NaN 是一个特殊的数字，表示Not A Number \n\n# 两个字符串相乘 "abc" * "bcd" \t结果为NaN，使用typeof ${结果}检查一个NaN也会返回number\n\n# a=NaN, typeof a是数字！！！\n')])])]),e("ul",[e("li",[e("p",[a._v("isNaN判断是否是数字")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('var score = prompt("请输入小明的期末成绩:");\nisNaN(score)            #判断用户输入的是否是数字\n\n#注意：prompt接收的都是一个string类型，转换：var score = +prompt("请输入数字:");\n')])])])])]),a._v(" "),e("h2",{attrs:{id:"不同进制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#不同进制"}},[a._v("#")]),a._v(" 不同进制")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('##但是输出的时候都会以十进制输出，如console.log(a)\n\n#var a=0x10;\t以0x开头表示16进制的数字              \t\t\n#var a=010;\t\t以0开头表示八进制的数字                       \n#var a=0b10;\t以0b开头表示二进制的数字，但是不是所有的浏览器都支持（火狐、chrome中支持）\n\n\nparseInt指定进制：\n    a = "070"  &&  parseInt(a)   \n        #"070"这种字符串，大部分浏览器都会当成10进制解析，但是有些浏览器会当成8进制解析（IE老的版本）\n    a = parseInt(a,10);    #可以在parseInt()中传递一个第二个参数，来指定数字的进制\n')])])])])}),[],!1,null,null,null);t.default=s.exports}}]);